{"version":3,"file":"static/js/870.fe9490e4.chunk.js","mappings":"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","sources":["components/Header.jsx","hooks/use-user.jsx","components/Profile/Header.jsx","components/Profile/Photos.jsx","components/Profile/index.js","pages/profile.jsx","services/firebase.jsx","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FirebaseContext from '~/context/firebase';\r\nimport UserContext from '~/context/user';\r\nimport * as ROUTES from '~/constants/routes';\r\n\r\nconst Header = () => {\r\n    const { firebaseApp } = useContext(FirebaseContext);\r\n    const { user } = useContext(UserContext);\r\n\r\n    return (\r\n        <header className=\"h-16 bg-white border-b border-gray-primary mb-8\">\r\n            <div className=\"container mx-auto max-w-screen-lg h-full\">\r\n                <div className=\"flex justify-between h-full\">\r\n                    <div className=\"text-gray-700 text-center flex items-center cursor-pointer\">\r\n                        <h1 className=\"flex justify-center w-full\">\r\n                            <Link\r\n                                to={ROUTES.DASHBOARD}\r\n                                aria-label=\"Instagram logo\"\r\n                            >\r\n                                <img\r\n                                    src=\"/images/Instagram_logo.svg.png\"\r\n                                    alt=\"Instagram\"\r\n                                    className=\"mt-2 w-2/12\"\r\n                                />\r\n                            </Link>\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"text-gray-700 text-center flex items-center align-items\">\r\n                        {user ? (\r\n                            <>\r\n                                <>\r\n                                    <Link\r\n                                        to={ROUTES.DASHBOARD}\r\n                                        aria-label=\"Dashboard\"\r\n                                    >\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            fill=\"none\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            strokeWidth=\"1.5\"\r\n                                            stroke=\"currentColor\"\r\n                                            className=\"w-8 mr-6 text-black-light cursor-pointer\"\r\n                                        >\r\n                                            <path\r\n                                                strokeLinecap=\"round\"\r\n                                                strokeLinejoin=\"round\"\r\n                                                d=\"m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\"\r\n                                            />\r\n                                        </svg>\r\n                                    </Link>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        title=\"Sign out\"\r\n                                        onClick={() =>\r\n                                            firebaseApp.auth().signOut()\r\n                                        }\r\n                                        onKeyDown={(event) => {\r\n                                            if (event.key === 'Enter') {\r\n                                                firebaseApp.auth().signOut();\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            fill=\"none\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            strokeWidth=\"1.5\"\r\n                                            stroke=\"currentColor\"\r\n                                            className=\"w-8 mr-6 text-black-light cursor-pointer\"\r\n                                        >\r\n                                            <path\r\n                                                strokeLinecap=\"round\"\r\n                                                strokeLinejoin=\"round\"\r\n                                                d=\"M15.75 9V5.25A2.25 2.25 0 0 0 13.5 3h-6a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h6a2.25 2.25 0 0 0 2.25-2.25V15m3 0 3-3m0 0-3-3m3 3H9\"\r\n                                            />\r\n                                        </svg>\r\n                                    </button>\r\n                                    <div className=\"flex items-center w-8 h-8 cursor-pointer\">\r\n                                        <Link to={`/p/${user.displayName}`}>\r\n                                            <img\r\n                                                className=\"rounded-full h-8 w-8 flex\"\r\n                                                src={`/images/avatars/${user.displayName}.jpg`}\r\n                                                alt={`${user.displayName} profile`}\r\n                                            />\r\n                                        </Link>\r\n                                    </div>\r\n                                </>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Link to={ROUTES.LOGIN}>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\r\n                                    >\r\n                                        Log In\r\n                                    </button>\r\n                                </Link>\r\n                                <Link to={ROUTES.SIGN_UP}>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"font-bold text-sm rounded text-blue-medium w-20 h-8\"\r\n                                    >\r\n                                        Sign Up\r\n                                    </button>\r\n                                </Link>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport UserContext from '~/context/user';\r\nimport { getUserByUserId } from '~/services/firebase';\r\n\r\nexport default function useUser() {\r\n    const [activeUser, setActiveUser] = useState({});\r\n    const { user } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        async function getUserOjbByUserId() {\r\n            const [response] = await getUserByUserId(user.uid);\r\n            setActiveUser(response);\r\n        }\r\n        if (user?.uid) {\r\n            getUserOjbByUserId();\r\n        }\r\n    }, [user]);\r\n\r\n    return { user: activeUser };\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useUser from '~/hooks/use-user';\r\nimport { isUserFollowingProfile, toggleFollow } from '~/services/firebase';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nconst Header = ({\r\n    photosCount,\r\n    followerCount,\r\n    setFollowerCount,\r\n    profile: {\r\n        docId: profileDocId,\r\n        userId: profileUserId,\r\n        fullName,\r\n        followers = [],\r\n        following = [],\r\n        username: profileUsername,\r\n    },\r\n}) => {\r\n    const { user } = useUser();\r\n    const [isFollowingProfile, setIsFollowingProfile] = useState(false);\r\n    const activeBtnFollow = user.username && user.username !== profileUsername;\r\n\r\n    const handleToggleFollow = async () => {\r\n        setIsFollowingProfile((isFollowingProfile) => !isFollowingProfile);\r\n        setFollowerCount({\r\n            followerCount: isFollowingProfile\r\n                ? followers.length - 1\r\n                : followers.length + 1,\r\n        });\r\n\r\n        await toggleFollow(\r\n            isFollowingProfile,\r\n            user.docId,\r\n            profileDocId,\r\n            profileUserId,\r\n            user.userId,\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        const isLoggedInUserFollowingProfile = async () => {\r\n            const isFollowing = await isUserFollowingProfile(\r\n                user.username,\r\n                profileUserId,\r\n            );\r\n            setIsFollowingProfile(!!isFollowing);\r\n        };\r\n\r\n        if (user.username && profileUserId) {\r\n            isLoggedInUserFollowingProfile();\r\n        }\r\n    }, [user.username, profileUserId]);\r\n    return (\r\n        <div className=\"grid grid-cols-4 gap-4 justify-between mx-auto max-w-screen-lg\">\r\n            <div className=\"container flex justify-center\">\r\n                {user.username && (\r\n                    <img\r\n                        className=\"rounded-full h-40 w-40 flex\"\r\n                        alt={`${user.userId} profile`}\r\n                        src={`/images/avatars/${profileUsername}.jpg`}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className=\"flex items-center justify-center flex-col col-span-2\">\r\n                <div className=\"container flex items-center\">\r\n                    <p className=\"text-2xl mr-4\">{profileUsername}</p>\r\n                    {activeBtnFollow && (\r\n                        <button\r\n                            className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8\"\r\n                            type=\"button\"\r\n                            onClick={handleToggleFollow}\r\n                            onKeyDown={(event) => {\r\n                                if (event.key === 'Enter') {\r\n                                    handleToggleFollow();\r\n                                }\r\n                            }}\r\n                        >\r\n                            {isFollowingProfile ? 'Unfollow' : 'Follow'}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <div className=\"container flex mt-4\">\r\n                    {followers === undefined || following === undefined ? (\r\n                        <Skeleton count={1} height={24} width={677} />\r\n                    ) : (\r\n                        <>\r\n                            <p className=\"mr-10\">\r\n                                <span className=\"font-bold\">{photosCount}</span>{' '}\r\n                                photos\r\n                            </p>\r\n                            <p className=\"mr-10\">\r\n                                <span className=\"font-bold\">\r\n                                    {followerCount}\r\n                                </span>\r\n                                {` `}\r\n                                {followerCount < 2 ? `follower` : `followers`}\r\n                            </p>\r\n                            <p className=\"mr-10\">\r\n                                <span className=\"font-bold\">\r\n                                    {following.length}\r\n                                </span>\r\n                                {` `}\r\n                                {followers.length === 1\r\n                                    ? `following`\r\n                                    : `followings`}\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div className=\"container mt-4\">\r\n                    <p className=\"font-medium\">\r\n                        {!fullName ? (\r\n                            <Skeleton count={1} height={24} />\r\n                        ) : (\r\n                            fullName\r\n                        )}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n    photosCount: PropTypes.number.isRequired,\r\n    followerCount: PropTypes.number,\r\n    setFollowerCount: PropTypes.func.isRequired,\r\n    profile: PropTypes.shape({\r\n        docId: PropTypes.string,\r\n        userId: PropTypes.string,\r\n        fullName: PropTypes.string,\r\n        username: PropTypes.string,\r\n        followers: PropTypes.array,\r\n        following: PropTypes.array,\r\n    }).isRequired,\r\n};\r\n","/* eslint-disable no-nested-ternary */\r\nimport PropTypes from 'prop-types';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nexport default function Photos({ photos }) {\r\n    return (\r\n        <div className=\"h-16 border-t border-gray-primary mt-12 pt-4\">\r\n            <div className=\"grid grid-cols-3 gap-8 mt-4 mb-12\">\r\n                {!photos\r\n                    ? new Array(12)\r\n                          .fill(0)\r\n                          .map((_, i) => (\r\n                              <Skeleton key={i} width={320} height={400} />\r\n                          ))\r\n                    : photos.length > 0\r\n                      ? photos.map((photo) => (\r\n                            <div key={photo.docId} className=\"relative group\">\r\n                                <img src={photo.imageSrc} alt={photo.caption} />\r\n\r\n                                <div className=\"absolute bottom-0 left-0 z-10 w-full h-full bg-gray-200 justify-evenly items-center  bg-black-faded group-hover:flex hidden\">\r\n                                    <p className=\"flex items-center text-white font-bold\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            viewBox=\"0 0 20 20\"\r\n                                            fill=\"currentColor\"\r\n                                            className=\"w-8 mr-4\"\r\n                                        >\r\n                                            <path\r\n                                                fillRule=\"evenodd\"\r\n                                                d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\r\n                                                clipRule=\"evenodd\"\r\n                                            />\r\n                                        </svg>\r\n                                        {photo.likes.length}\r\n                                    </p>\r\n\r\n                                    <p className=\"flex items-center text-white font-bold\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            viewBox=\"0 0 20 20\"\r\n                                            fill=\"currentColor\"\r\n                                            className=\"w-8 mr-4\"\r\n                                        >\r\n                                            <path\r\n                                                fillRule=\"evenodd\"\r\n                                                d=\"M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z\"\r\n                                                clipRule=\"evenodd\"\r\n                                            />\r\n                                        </svg>\r\n                                        {photo.comments.length}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                      : null}\r\n            </div>\r\n\r\n            {!photos ||\r\n                (photos.length === 0 && (\r\n                    <p className=\"text-center text-2xl\">No Posts Yet</p>\r\n                ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nPhotos.propTypes = {\r\n    photos: PropTypes.array,\r\n};\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport { getUserPhotoByUserName } from '~/services/firebase';\r\nimport Photos from './Photos';\r\n\r\nconst UserProfile = ({ user }) => {\r\n    const reducer = (state, newState) => ({ ...state, ...newState });\r\n    const initialState = {\r\n        profile: {},\r\n        photosCollection: [],\r\n        followerCout: 0,\r\n    };\r\n    const [{ profile, photosCollection, followerCount }, dispatch] = useReducer(\r\n        reducer,\r\n        initialState,\r\n    );\r\n\r\n    useEffect(() => {\r\n        async function getProfileInfoAndPhotos() {\r\n            const photos = await getUserPhotoByUserName(user.username);\r\n            console.log(photos);\r\n            dispatch({\r\n                profile: user,\r\n                photosCollection: photos,\r\n                followerCount: user.followers.length,\r\n            });\r\n        }\r\n\r\n        if (user.username) {\r\n            getProfileInfoAndPhotos();\r\n        }\r\n    }, [user]);\r\n    return (\r\n        <div>\r\n            <Header\r\n                photosCount={photosCollection ? photosCollection.length : 0}\r\n                profile={profile}\r\n                followerCount={followerCount}\r\n                setFollowerCount={dispatch}\r\n            />\r\n            <Photos photos={photosCollection} />\r\n        </div>\r\n    );\r\n};\r\n\r\nUserProfile.propTypes = {\r\n    user: PropTypes.shape({\r\n        dateCreated: PropTypes.number.isRequired,\r\n        emailAddress: PropTypes.string.isRequired,\r\n        followers: PropTypes.array.isRequired,\r\n        following: PropTypes.array.isRequired,\r\n        fullName: PropTypes.string.isRequired,\r\n        userId: PropTypes.string.isRequired,\r\n        username: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { getUserByUsername } from '~/services/firebase';\r\nimport * as ROUTES from '~/constants/routes';\r\nimport Header from '~/components/Header';\r\nimport UserProfile from '~/components/Profile';\r\n\r\nconst Profile = () => {\r\n    const { username } = useParams();\r\n    const [user, setUser] = useState(null);\r\n    const navigation = useNavigate();\r\n\r\n    useEffect(() => {\r\n        async function checkUserExists() {\r\n            const user = await getUserByUsername(username);\r\n            if (user.length > 0) {\r\n                setUser(user[0]);\r\n            } else {\r\n                navigation(ROUTES.NOT_FOUND);\r\n            }\r\n        }\r\n\r\n        checkUserExists();\r\n    }, [username, navigation]);\r\n    return user?.username ? (\r\n        <div className=\"bg-gray-background\">\r\n            <Header />\r\n            <div className=\"mx-auto max-w-screen-lg\">\r\n                <UserProfile user={user} />\r\n            </div>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nProfile.propTypes = {};\r\n\r\nexport default Profile;\r\n","import { firebaseApp, FieldValue } from '~/lib/firebase';\r\n\r\nexport async function doesUsernameExist(username) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .where('username', '==', username)\r\n        .get();\r\n\r\n    return result.docs.map((user) => user.data().length > 0);\r\n}\r\n\r\nexport async function getUserByUsername(username) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .where('username', '==', username)\r\n        .get();\r\n    // console.log('result', result);\r\n    const user = result.docs.map((item) => ({\r\n        ...item.data(),\r\n        docId: item.id,\r\n    }));\r\n\r\n    // console.log('user', user);\r\n    return user.length > 0 ? user : false;\r\n}\r\n\r\nexport async function getUserByUserId(userId) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .where('userId', '==', userId)\r\n        .get();\r\n\r\n    return result.docs.map((item) => ({\r\n        ...item.data(),\r\n        docId: item.id,\r\n    }));\r\n}\r\n\r\nexport async function getSuggestedProfiles(userId, following) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .limit(10)\r\n        .get();\r\n\r\n    return result.docs\r\n        .map((user) => ({ ...user.data(), docId: user.id }))\r\n        .filter(\r\n            (profile) =>\r\n                profile.userId !== userId &&\r\n                !following.includes(profile.userId),\r\n        );\r\n}\r\n\r\nexport async function updateLoggedInUserFollowing(\r\n    loggedInUserDocId, // current user logged\r\n    profileId, // user to follow\r\n    isFollowingProfile, // true/false (am i currently following this person?)\r\n) {\r\n    return firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .doc(loggedInUserDocId)\r\n        .update({\r\n            following: isFollowingProfile\r\n                ? FieldValue.arrayRemove(profileId) // remove from arr.\r\n                : FieldValue.arrayUnion(profileId), // add to arr.\r\n        });\r\n}\r\n\r\nexport async function updateFollowedUserFollowers(\r\n    profileDocId, // current user logged\r\n    loggedInUserDocId, // user to follow\r\n    isFollowingProfile, // true/false (am i currently following this person?)\r\n) {\r\n    return firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .doc(profileDocId)\r\n        .update({\r\n            followers: isFollowingProfile\r\n                ? FieldValue.arrayRemove(loggedInUserDocId) // remove from arr.\r\n                : FieldValue.arrayUnion(loggedInUserDocId), // add to arr.\r\n        });\r\n}\r\n\r\nexport async function getPhotos(userId, following) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('photos')\r\n        .where('userId', 'in', following)\r\n        .get();\r\n\r\n    const userFollowedPhotos = result.docs.map((photo) => ({\r\n        ...photo.data(),\r\n        docId: photo.id,\r\n    }));\r\n\r\n    // ADD USER TO LIKES IF userId INSIDE LIKES.\r\n    const photosWithUserDetails = await Promise.all(\r\n        userFollowedPhotos.map(async (photo) => {\r\n            let userLikedPhoto = false;\r\n            if (photo.likes.includes(userId)) {\r\n                userLikedPhoto = true;\r\n            }\r\n            // photo.userId = 2\r\n            const user = await getUserByUserId(photo.userId);\r\n            // raphael\r\n            const { username } = user[0];\r\n            return { username, ...photo, userLikedPhoto };\r\n        }),\r\n    );\r\n\r\n    return photosWithUserDetails;\r\n}\r\n\r\nexport async function getUserPhotoByUserName(username) {\r\n    const [user] = await getUserByUsername(username);\r\n\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('photos')\r\n        .where('userId', '==', user.userId)\r\n        .get();\r\n\r\n    return result.docs.map((item) => ({\r\n        ...item.data(),\r\n        docId: item.id,\r\n    }));\r\n}\r\n\r\nexport async function isUserFollowingProfile(\r\n    loggedInUserUsername,\r\n    profileUserId,\r\n) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .where('username', '==', loggedInUserUsername)\r\n        .where('following', 'array-contains', profileUserId)\r\n        .get();\r\n\r\n    const [response = {}] = result.docs.map((item) => ({\r\n        ...item.data(),\r\n        docId: item.id,\r\n    }));\r\n\r\n    return response.userId;\r\n}\r\n\r\nexport async function toggleFollow(\r\n    isFollowingProfile,\r\n    activeUserDocId,\r\n    profileDocId,\r\n    profileUserId,\r\n    followingUserId,\r\n) {\r\n    // 1st param: chinh docId\r\n    // 2st param: huy userId\r\n    // 3st is the user following this profile?\r\n    await updateLoggedInUserFollowing(\r\n        activeUserDocId,\r\n        profileUserId,\r\n        isFollowingProfile,\r\n    );\r\n\r\n    //1st user id\r\n    //2st doc id\r\n    //3st true/false\r\n    await updateFollowedUserFollowers(\r\n        profileDocId,\r\n        followingUserId,\r\n        isFollowingProfile,\r\n    );\r\n}\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["Header","firebaseApp","useContext","FirebaseContext","user","UserContext","_jsx","className","children","_jsxs","Link","to","ROUTES","src","alt","_Fragment","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","type","title","onClick","auth","signOut","onKeyDown","event","key","concat","displayName","useUser","activeUser","setActiveUser","useState","useEffect","uid","async","response","getUserByUserId","getUserOjbByUserId","_ref","photosCount","followerCount","setFollowerCount","profile","docId","profileDocId","userId","profileUserId","fullName","followers","following","username","profileUsername","isFollowingProfile","setIsFollowingProfile","activeBtnFollow","handleToggleFollow","length","toggleFollow","isFollowing","isUserFollowingProfile","isLoggedInUserFollowingProfile","undefined","Skeleton","count","height","width","Photos","photos","map","photo","imageSrc","caption","fillRule","clipRule","likes","comments","Array","_","i","photosCollection","dispatch","useReducer","reducer","state","newState","followerCout","getUserPhotoByUserName","console","log","getProfileInfoAndPhotos","Profile","useParams","setUser","navigation","useNavigate","getUserByUsername","checkUserExists","UserProfile","doesUsernameExist","firestore","collection","where","get","docs","data","item","id","getSuggestedProfiles","limit","filter","includes","updateLoggedInUserFollowing","loggedInUserDocId","profileId","doc","update","FieldValue","arrayRemove","arrayUnion","updateFollowedUserFollowers","getPhotos","userFollowedPhotos","Promise","all","userLikedPhoto","loggedInUserUsername","result","activeUserDocId","followingUserId","SkeletonThemeContext","React","defaultEnableAnimation","styleOptionsToCssProperties","baseColor","highlightColor","borderRadius","circle","direction","duration","enableAnimation","style","_ref2","wrapper","Wrapper","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}