{"version":3,"file":"static/js/674.4dfed6a7.chunk.js","mappings":"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","sources":["pages/sign-up.jsx","services/firebase.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport FirebaseContext from '~/context/firebase';\r\nimport * as ROUTERS from '~/constants/routes';\r\nimport { doesUsernameExist } from '~/services/firebase';\r\n\r\nconst Signup = () => {\r\n    const navigation = useNavigate();\r\n\r\n    const { firebaseApp } = useContext(FirebaseContext);\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [fullName, setFullName] = useState('');\r\n\r\n    const [emailAddress, setEmailAdress] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n    const isInvalid = password === '' || emailAddress === '';\r\n\r\n    var handleSignup = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const usernameExists = await doesUsernameExist(username);\r\n\r\n        if (!usernameExists.length) {\r\n            try {\r\n                const createdUserResult = await firebaseApp\r\n                    .auth()\r\n                    .createUserWithEmailAndPassword(emailAddress, password);\r\n\r\n                // authentication\r\n                await createdUserResult.user.updateProfile({\r\n                    displayName: username,\r\n                });\r\n\r\n                //firebase user collection\r\n                await firebaseApp.firestore().collection('users').add({\r\n                    userId: createdUserResult.user.uid,\r\n                    username: username.toLowerCase(),\r\n                    fullName,\r\n                    emailAddress: emailAddress.toLowerCase(),\r\n                    followers: [],\r\n                    following: [],\r\n                    dateCreated: Date.now(),\r\n                });\r\n\r\n                navigation(ROUTERS.DASHBOARD);\r\n            } catch (error) {\r\n                setFullName('');\r\n                setUsername('');\r\n                setEmailAdress('');\r\n                setPassword('');\r\n                setError(error.message);\r\n            }\r\n        } else {\r\n            setError('That username is already taken, please try another.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.title = 'Sign Up - Instagram';\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container flex mx-auto max-w-screen-md items-center h-screen \">\r\n            <div className=\"flex w-3/5\">\r\n                <img\r\n                    src=\"/images/iphone-with-profile.jpg\"\r\n                    alt=\"iphone with instagram\"\r\n                />\r\n            </div>\r\n            <div className=\"flex flex-col w-2/5\">\r\n                <div className=\"flex flex-col items-center bg-white p-4 border border-gray-primary mb-4 rounded\">\r\n                    <h1 className=\"flex justify-center w-full\">\r\n                        <img\r\n                            src=\"./images/Instagram_logo.svg.png\"\r\n                            alt=\"Instagram\"\r\n                            className=\"mt-2 w-6/12 mb-4\"\r\n                        />\r\n                    </h1>\r\n                    {error && (\r\n                        <p className=\"mb-4 text-xs text-red-primary\">{error}</p>\r\n                    )}\r\n                    <form onSubmit={handleSignup} method=\"POST\">\r\n                        <input\r\n                            aria-label=\"Enter your userName\"\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 outline-none border border-gray-primary rounded mb-2\"\r\n                            onChange={({ target }) => setUsername(target.value)}\r\n                            value={username}\r\n                        />\r\n                        <input\r\n                            aria-label=\"Enter your full name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Full name\"\r\n                            className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 outline-none border border-gray-primary rounded mb-2\"\r\n                            onChange={({ target }) => setFullName(target.value)}\r\n                            value={fullName}\r\n                        />\r\n                        <input\r\n                            aria-label=\"Enter your email address\"\r\n                            type=\"text\"\r\n                            placeholder=\"Email address\"\r\n                            className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 outline-none border border-gray-primary rounded mb-2\"\r\n                            onChange={({ target }) =>\r\n                                setEmailAdress(target.value)\r\n                            }\r\n                            value={emailAddress}\r\n                        />\r\n                        <input\r\n                            aria-label=\"Enter your password \"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 outline-none border border-gray-primary rounded mb-2\"\r\n                            onChange={({ target }) => setPassword(target.value)}\r\n                            value={password}\r\n                        />\r\n                        <button\r\n                            disabled={isInvalid}\r\n                            type=\"submit\"\r\n                            className={`bg-blue-medium text-white w-full rounded h-8 font-bold ${isInvalid && 'opacity-50'}`}\r\n                        >\r\n                            Sign Up\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"flex justify-center items-center flex-col w-full bg-white p-4 border border-gray-primary rounded\">\r\n                    <p className=\"text-sm\">\r\n                        Have an account?{` `}\r\n                        <Link\r\n                            to={ROUTERS.LOGIN}\r\n                            className=\"font-bold text-blue-medium\"\r\n                        >\r\n                            Login\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSignup.propTypes = {};\r\n\r\nexport default Signup;\r\n","import { firebaseApp, FieldValue } from '~/lib/firebase';\r\n\r\nexport async function doesUsernameExist(username) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .where('username', '==', username)\r\n        .get();\r\n\r\n    return result.docs.map((user) => user.data().length > 0);\r\n}\r\n\r\nexport async function getUserByUsername(username) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .where('username', '==', username)\r\n        .get();\r\n    // console.log('result', result);\r\n    const user = result.docs.map((item) => ({\r\n        ...item.data(),\r\n        docId: item.id,\r\n    }));\r\n\r\n    // console.log('user', user);\r\n    return user.length > 0 ? user : false;\r\n}\r\n\r\nexport async function getUserByUserId(userId) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .where('userId', '==', userId)\r\n        .get();\r\n\r\n    return result.docs.map((item) => ({\r\n        ...item.data(),\r\n        docId: item.id,\r\n    }));\r\n}\r\n\r\nexport async function getSuggestedProfiles(userId, following) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .limit(10)\r\n        .get();\r\n\r\n    return result.docs\r\n        .map((user) => ({ ...user.data(), docId: user.id }))\r\n        .filter(\r\n            (profile) =>\r\n                profile.userId !== userId &&\r\n                !following.includes(profile.userId),\r\n        );\r\n}\r\n\r\nexport async function updateLoggedInUserFollowing(\r\n    loggedInUserDocId, // current user logged\r\n    profileId, // user to follow\r\n    isFollowingProfile, // true/false (am i currently following this person?)\r\n) {\r\n    return firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .doc(loggedInUserDocId)\r\n        .update({\r\n            following: isFollowingProfile\r\n                ? FieldValue.arrayRemove(profileId) // remove from arr.\r\n                : FieldValue.arrayUnion(profileId), // add to arr.\r\n        });\r\n}\r\n\r\nexport async function updateFollowedUserFollowers(\r\n    profileDocId, // current user logged\r\n    loggedInUserDocId, // user to follow\r\n    isFollowingProfile, // true/false (am i currently following this person?)\r\n) {\r\n    return firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .doc(profileDocId)\r\n        .update({\r\n            followers: isFollowingProfile\r\n                ? FieldValue.arrayRemove(loggedInUserDocId) // remove from arr.\r\n                : FieldValue.arrayUnion(loggedInUserDocId), // add to arr.\r\n        });\r\n}\r\n\r\nexport async function getPhotos(userId, following) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('photos')\r\n        .where('userId', 'in', following)\r\n        .get();\r\n\r\n    const userFollowedPhotos = result.docs.map((photo) => ({\r\n        ...photo.data(),\r\n        docId: photo.id,\r\n    }));\r\n\r\n    // ADD USER TO LIKES IF userId INSIDE LIKES.\r\n    const photosWithUserDetails = await Promise.all(\r\n        userFollowedPhotos.map(async (photo) => {\r\n            let userLikedPhoto = false;\r\n            if (photo.likes.includes(userId)) {\r\n                userLikedPhoto = true;\r\n            }\r\n            // photo.userId = 2\r\n            const user = await getUserByUserId(photo.userId);\r\n            // raphael\r\n            const { username } = user[0];\r\n            return { username, ...photo, userLikedPhoto };\r\n        }),\r\n    );\r\n\r\n    return photosWithUserDetails;\r\n}\r\n\r\nexport async function getUserPhotoByUserName(username) {\r\n    const [user] = await getUserByUsername(username);\r\n\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('photos')\r\n        .where('userId', '==', user.userId)\r\n        .get();\r\n\r\n    return result.docs.map((item) => ({\r\n        ...item.data(),\r\n        docId: item.id,\r\n    }));\r\n}\r\n\r\nexport async function isUserFollowingProfile(\r\n    loggedInUserUsername,\r\n    profileUserId,\r\n) {\r\n    const result = await firebaseApp\r\n        .firestore()\r\n        .collection('users')\r\n        .where('username', '==', loggedInUserUsername)\r\n        .where('following', 'array-contains', profileUserId)\r\n        .get();\r\n\r\n    const [response = {}] = result.docs.map((item) => ({\r\n        ...item.data(),\r\n        docId: item.id,\r\n    }));\r\n\r\n    return response.userId;\r\n}\r\n\r\nexport async function toggleFollow(\r\n    isFollowingProfile,\r\n    activeUserDocId,\r\n    profileDocId,\r\n    profileUserId,\r\n    followingUserId,\r\n) {\r\n    // 1st param: chinh docId\r\n    // 2st param: huy userId\r\n    // 3st is the user following this profile?\r\n    await updateLoggedInUserFollowing(\r\n        activeUserDocId,\r\n        profileUserId,\r\n        isFollowingProfile,\r\n    );\r\n\r\n    //1st user id\r\n    //2st doc id\r\n    //3st true/false\r\n    await updateFollowedUserFollowers(\r\n        profileDocId,\r\n        followingUserId,\r\n        isFollowingProfile,\r\n    );\r\n}\r\n"],"names":["Signup","navigation","useNavigate","firebaseApp","useContext","FirebaseContext","username","setUsername","useState","fullName","setFullName","emailAddress","setEmailAdress","password","setPassword","error","setError","isInvalid","useEffect","document","title","_jsxs","className","children","_jsx","src","alt","onSubmit","async","event","preventDefault","doesUsernameExist","length","createdUserResult","auth","createUserWithEmailAndPassword","user","updateProfile","displayName","firestore","collection","add","userId","uid","toLowerCase","followers","following","dateCreated","Date","now","ROUTERS","message","method","type","placeholder","onChange","_ref","target","value","_ref2","_ref3","_ref4","disabled","concat","Link","to","where","get","docs","map","data","getUserByUsername","item","docId","id","getUserByUserId","getSuggestedProfiles","limit","filter","profile","includes","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","doc","update","FieldValue","arrayRemove","arrayUnion","updateFollowedUserFollowers","profileDocId","getPhotos","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","getUserPhotoByUserName","isUserFollowingProfile","loggedInUserUsername","profileUserId","result","response","toggleFollow","activeUserDocId","followingUserId"],"sourceRoot":""}